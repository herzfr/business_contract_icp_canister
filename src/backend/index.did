service: () -> {
    createContracts: (record {terms_of_Payment:text; entire_agreement:text; name:text; email:text; website:text; contractual_statement:text; company:text; scope_contract:text; term_and_termination:text; phone:text; legal_id:text; contract_value:float64; project_name:text; city_stat_zipcode:text; confidentiality:text; governing_law:text}) -> (variant {Ok:record {client:record {counterparty_identity:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}; "principal":principal; signature:record {client_signed:bool; contractor_sign:text; client_sign_date:nat64; contractor_sign_date:nat64; contractor_signed:bool; client_sign:text}; status_contract:bool; terms_of_Payment:text; entire_agreement:text; createdAt:nat64; contract_id:text; contractual_statement:text; scope_contract:text; term_and_termination:text; contract_value:float64; project_name:text; confidentiality:text; contractor:record {name:text; email:text; website:text; company:text; phone:text; legal_id:text; city_stat_zipcode:text}; governing_law:text}; Err:text});
    getContract: (record {contract_id:text}) -> (variant {Ok:opt record {client:record {counterparty_identity:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}; "principal":principal; signature:record {client_signed:bool; contractor_sign:text; client_sign_date:nat64; contractor_sign_date:nat64; contractor_signed:bool; client_sign:text}; status_contract:bool; terms_of_Payment:text; entire_agreement:text; createdAt:nat64; contract_id:text; contractual_statement:text; scope_contract:text; term_and_termination:text; contract_value:float64; project_name:text; confidentiality:text; contractor:record {name:text; email:text; website:text; company:text; phone:text; legal_id:text; city_stat_zipcode:text}; governing_law:text}; Err:text}) query;
    getContracts: () -> (variant {Ok:vec record {client:record {counterparty_identity:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}; "principal":principal; signature:record {client_signed:bool; contractor_sign:text; client_sign_date:nat64; contractor_sign_date:nat64; contractor_signed:bool; client_sign:text}; status_contract:bool; terms_of_Payment:text; entire_agreement:text; createdAt:nat64; contract_id:text; contractual_statement:text; scope_contract:text; term_and_termination:text; contract_value:float64; project_name:text; confidentiality:text; contractor:record {name:text; email:text; website:text; company:text; phone:text; legal_id:text; city_stat_zipcode:text}; governing_law:text}; Err:text}) query;
    signClient: (record {counterparty_identity:text; contract_id:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}) -> (variant {Ok:record {client:record {counterparty_identity:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}; "principal":principal; signature:record {client_signed:bool; contractor_sign:text; client_sign_date:nat64; contractor_sign_date:nat64; contractor_signed:bool; client_sign:text}; status_contract:bool; terms_of_Payment:text; entire_agreement:text; createdAt:nat64; contract_id:text; contractual_statement:text; scope_contract:text; term_and_termination:text; contract_value:float64; project_name:text; confidentiality:text; contractor:record {name:text; email:text; website:text; company:text; phone:text; legal_id:text; city_stat_zipcode:text}; governing_law:text}; Err:text});
    signContractor: (record {contract_id:text}) -> (variant {Ok:record {client:record {counterparty_identity:text; counterparty_name:text; email:text; website:text; phone:text; city_stat_zipcode:text}; "principal":principal; signature:record {client_signed:bool; contractor_sign:text; client_sign_date:nat64; contractor_sign_date:nat64; contractor_signed:bool; client_sign:text}; status_contract:bool; terms_of_Payment:text; entire_agreement:text; createdAt:nat64; contract_id:text; contractual_statement:text; scope_contract:text; term_and_termination:text; contract_value:float64; project_name:text; confidentiality:text; contractor:record {name:text; email:text; website:text; company:text; phone:text; legal_id:text; city_stat_zipcode:text}; governing_law:text}; Err:text});
    statusContract: (record {contract_id:text}) -> (variant {Ok:record {status:text; contract_id:text}; Err:text}) query;
}
